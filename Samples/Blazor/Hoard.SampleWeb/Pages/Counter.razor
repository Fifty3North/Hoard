@using Hoard.SampleLogic.Counter
@using F3N.Hoard.Extensions
@using F3N.Hoard.State
@using Microsoft.AspNetCore.ProtectedBrowserStorage

@inject CounterStore counterStore;

@implements IDisposable

@page "/counter"

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="@IncrementCount">Up</button>

<button class="btn btn-primary" @onclick="@DecrementCount">Down</button>

@code {

    
    CounterState state;
    IDisposable subscription;

    protected override async Task OnInitializedAsync()
    {
        await counterStore.Initialise();

        subscription = counterStore.Observe().Subscribe(async (s) =>
        {
          currentCount = s.Count;
        });

        state = counterStore.CurrentState;

        currentCount = state.Count;
    }

    int currentCount = 0;

    async Task IncrementCount()
    {
        await counterStore.Dispatch<CounterStore>(new Hoard.SampleLogic.Counter.Commands.IncrementCounter());
    }

    async Task DecrementCount()
    {
        await counterStore.Dispatch(new Hoard.SampleLogic.Counter.Commands.DecrementCounter());
    }

    public void Dispose()
    {
        subscription?.Dispose();
    }
}
