@inject Hoard.SampleLogic.Counter.CounterStore counterStore
@inject Hoard.SampleLogic.Forecast.ForecastStore forecastStore
@if (isLoaded)
{
    <CascadingValue Value="@this">
        @ChildContent
    </CascadingValue>
}
else
{
    <p>Loading...</p>
}

@code
{
    private bool isLoaded;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public Hoard.SampleLogic.Counter.CounterStore CounterStore { get { return counterStore; } }
    public Hoard.SampleLogic.Forecast.ForecastStore ForecastStore { get { return forecastStore; } }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await counterStore.Initialise();
            await forecastStore.Initialise();

            isLoaded = true;
            StateHasChanged();
        }
    }
}
