@using Hoard.SampleLogic.Counter
@using F3N.Hoard.Extensions
@using Hoard.SampleLogic.Counter.Commands
 
@implements IDisposable

@page "/counter"

<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="@IncrementCount">Up</button>

<button class="btn btn-primary" @onclick="@DecrementCount">Down</button>

@code {
    [CascadingParameter] private StateProvider StateProvider { get; set; }

    IDisposable subscription;
    protected override async Task OnInitializedAsync()
    {
        subscription = StateProvider.CounterStore.Observe().Subscribe((s) =>
        {
            currentCount = s.Count;
        });

        currentCount = StateProvider.CounterStore.CurrentState.Count;

        await base.OnInitializedAsync();
    }

    int currentCount = 0;

    async Task IncrementCount()
    {
        await StateProvider.CounterStore.Dispatch(new IncrementCounter());
    }

    async Task DecrementCount()
    {
        await StateProvider.CounterStore.Dispatch(new DecrementCounter());
    }

    public void Dispose()
    {
        subscription?.Dispose();
    }
}
